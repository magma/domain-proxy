nameOverride: ""
fullnameOverride: ""

configuration_controller:

  nameOverride: ""
  fullnameOverride: ""
  enabled: true
  name: configuration-controller
  sasEndpointUrl: "https://fake-sas-service/v1.3"

  imageConfig:
    pullPolicy: IfNotPresent

  image: domainproxyfw1/configuration-controller:latest

  replicaCount: 1

  imagePullSecrets: []

  serviceAccount:
    create: false
    annotations: {}
    name: ""

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}

  service:
    enable: true
    type: ClusterIP
    port: 8080

  tlsConfig:
    paths:
      cert: "certificates/configuration_controller/device_c.cert"
      key: "certificates/configuration_controller/device_c.key"
      ca: "certificates/configuration_controller/ca.cert"

  ingress:
    enabled: false
    annotations: {}
    hosts: []
    tls: []

  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

  readinessProbe: {}

  livenessProbe: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

protocol_controller:

  nameOverride: ""
  fullnameOverride: ""
  enabled: true
  name: protocol-controller

  imageConfig:
    pullPolicy: IfNotPresent

  image: domainproxyfw1/protocol-controller:latest
    
  replicaCount: 1

  imagePullSecrets: []

  serviceAccount:
    create: false
    annotations: {}
    name: ""

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}

  service:
    enable: true
    type: ClusterIP
    port: 8080

  tlsConfig:
    paths:
      cert: "certificates/protocol_controller/domain_proxy_bundle.cert"
      key: "certificates/protocol_controller/domain_proxy_server.key"
      ca: "certificates/protocol_controller/ca.cert"

  apiPrefix: "/sas/v1"

  ingress:
    enabled: true
    annotations: 
      nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
      nginx.ingress.kubernetes.io/auth-tls-secret: "domain-proxy-pc-ca"
      nginx.ingress.kubernetes.io/default-backend: "domain-proxy-protocol-controller"
      kubernetes.io/ingress.class: "nginx"

    hosts:
      - host: domain-proxy
        paths:
          - path: /sas
            pathType: ImplementationSpecific
    tls:
      - secretName: domain-proxy-pc
        hosts:
          - domain-proxy

  httpproxy:
    enabled: false
    annotations: {}
    virtualhost: {}

  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

  readinessProbe: {}

  livenessProbe: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

radio_controller:

  nameOverride: ""
  fullnameOverride: ""
  enabled: true
  name: radio-controller

  imageConfig:
    pullPolicy: IfNotPresent

  image: domainproxyfw1/radio-controller:latest

  replicaCount: 1

  imagePullSecrets: []

  serviceAccount:
    create: false
    annotations: {}
    name: ""

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}

  service:
    enable: true
    type: ClusterIP
    port: 50053

  tlsConfig:
    paths:
      cert: ""
      key: ""
      ca: ""

  ingress:
    enabled: false
    annotations: {}
    hosts: []
    tls: []
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

  readinessProbe: {}

  livenessProbe: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

db_service:

  enabled: true
  nameOverride: ""
  fullnameOverride: ""
  name: db-service

  imageConfig:
    pullPolicy: IfNotPresent

  image: domainproxyfw1/db-service:latest

  imagePullSecrets: []

  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
