name: Test and build configuration controller

on: 
  push:
  pull_request:
    paths:
      - "configuration_controller/**"
      - ".github/workflows/configuration_controller.yml"

jobs:
  configuration_controller_unit_tests:
    name: "Configuration controller unit tests"
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: configuration_controller

    strategy:
      matrix:
        python-version: [3.8]
    steps:

    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f tests/requirements.txt ]; then pip install -r tests/requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest tests/unit

  configuration_controller_build_and_integation_tests:
    name: "Configuration controller integration tests"
    needs: configuration_controller_unit_tests
    runs-on: ubuntu-latest
    env:
      SERVICE: "configuration-controller"

    steps:
    - uses: actions/checkout@v2
    - name: Build image
      run: |
        make _build_ci

    - name: Install Minikube
      uses: manusa/actions-setup-minikube@v2.3.1
      with:
        minikube version: 'v1.18.1'
        kubernetes version: 'v1.20.2'
        github token: ${{ secrets.GITHUB_TOKEN }}
        start args: "--addons=ingress --memory=6954m"
        driver: "docker"

    - name: Setup Minikube
      run: |
        make _ci_init

    - name: Get minikube IP.
      run: |
        minikube ip
        mkdir -p /tmp/test-results
        minikube mount /tmp/test-results:/tmp/test-results &

    - name: Run integration tests
      run: | 
        make _ci_test

    - name: Upload integration test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: /tmp/test-results/
